/*
 * Copyright 2017-present Open Networking Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";
option java_package = "org.onosproject.grpc.net.link.models";

package net.link;

enum LinkTypeProto {
    // Signifies that this is a direct single-segment link.
    DIRECT = 0;

    // Signifies that this link is potentially comprised from multiple
    // underlying segments or hops, and as such should be used to tag
    // links traversing optical paths, tunnels or intervening 'dark'
    // switches.
    INDIRECT = 1;

    // Signifies that this link is an edge, i.e. host link.
    EDGE = 2;

    // Signifies that this link represents a logical link backed by
    // some form of a tunnel, e.g., GRE, MPLS, ODUk, OCH.
    TUNNEL = 3;

    // Signifies that this link is realized by fiber (either single channel or WDM).
    OPTICAL = 4;

    // Signifies that this link is a virtual link or a pseudo-wire.
    VIRTUAL = 5;
}

enum LinkStateProto {
    ACTIVE = 0;
    INACTIVE = 1;
}

// Link Event Types
enum LinkEventTypeProto {
    LINK_ADDED = 0;
    LINK_UPDATED = 1;
    LINK_REMOVED = 2;
}
